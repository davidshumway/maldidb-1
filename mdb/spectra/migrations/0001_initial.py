# Generated by Django 3.1 on 2021-05-02 19:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('chat', '0003_auto_20210502_1907'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Spectra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privacy_level', models.CharField(blank=True, choices=[('PB', 'Public'), ('PR', 'Private')], default='PB', max_length=2, null=True)),
                ('peak_mass', models.TextField(blank=True, help_text='A list of comma separated values, e.g., "1,2,3"')),
                ('peak_intensity', models.TextField(blank=True, help_text='A list of comma separated values, e.g., "1,2,3"')),
                ('peak_snr', models.TextField(blank=True, help_text='A list of comma separated values, e.g., "1,2,3"')),
                ('spectrum_mass_hash', models.CharField(blank=True, max_length=255)),
                ('spectrum_intensity_hash', models.CharField(blank=True, max_length=255)),
                ('picture', models.ImageField(blank=True, upload_to='spectra_images')),
                ('description', models.TextField(blank=True, max_length=2048)),
                ('posted_date', models.DateTimeField(auto_now_add=True)),
                ('max_mass', models.IntegerField(blank=True, null=True)),
                ('min_mass', models.IntegerField(blank=True, null=True)),
                ('acquisition_date', models.CharField(blank=True, max_length=255, null=True)),
                ('acquisition_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('spot', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lab_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.labgroup')),
                ('library', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.library')),
                ('strain_id', models.ForeignKey(blank=True, db_column='strain_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.metadata')),
                ('xml_hash', models.ForeignKey(blank=True, db_column='xml_hash', null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.xml')),
            ],
        ),
        migrations.CreateModel(
            name='SearchSpectra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privacy_level', models.CharField(blank=True, choices=[('PB', 'Public'), ('PR', 'Private')], default='PB', max_length=2, null=True)),
                ('spectrum_mass_hash', models.CharField(blank=True, max_length=255)),
                ('spectrum_intensity_hash', models.CharField(blank=True, max_length=255)),
                ('peak_mass', models.TextField(blank=True)),
                ('peak_intensity', models.TextField(blank=True)),
                ('peak_snr', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lab_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.labgroup')),
                ('library', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.library')),
                ('strain_id', models.ForeignKey(blank=True, db_column='strain_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.metadata')),
                ('xml_hash', models.ForeignKey(blank=True, db_column='xml_hash', null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.xml')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CollapsedSpectra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privacy_level', models.CharField(blank=True, choices=[('PB', 'Public'), ('PR', 'Private')], default='PB', max_length=2, null=True)),
                ('peak_mass', models.TextField(blank=True, help_text='A list of comma separated values, e.g., "1,2,3"')),
                ('peak_intensity', models.TextField(blank=True, help_text='A list of comma separated values, e.g., "1,2,3"')),
                ('peak_snr', models.TextField(blank=True, help_text='A list of comma separated values, e.g., "1,2,3"')),
                ('spectrum_mass_hash', models.CharField(blank=True, max_length=255)),
                ('spectrum_intensity_hash', models.CharField(blank=True, max_length=255)),
                ('peak_percent_presence', models.DecimalField(decimal_places=1, default=70.0, max_digits=4)),
                ('min_snr', models.DecimalField(decimal_places=2, default=0.25, max_digits=4)),
                ('tolerance', models.DecimalField(decimal_places=3, default=0.002, max_digits=10)),
                ('spectra_content', models.CharField(choices=[('PR', 'Protein'), ('SM', 'Small Molecule')], default='PR', max_length=2)),
                ('generated_date', models.DateTimeField(auto_now_add=True)),
                ('collapsed_spectra', models.ManyToManyField(to='spectra.Spectra')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lab_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.labgroup')),
                ('library', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.library')),
                ('strain_id', models.ForeignKey(blank=True, db_column='strain_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.metadata')),
                ('xml_hash', models.ForeignKey(blank=True, db_column='xml_hash', null=True, on_delete=django.db.models.deletion.CASCADE, to='chat.xml')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
